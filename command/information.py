import discord
from firebase_admin import credentials
from firebase_admin import db
import uuid
import string
from command2.card import card

async def myinformation(ctx):
    dir = db.reference(f"{ctx.author.id}/레벨")
    level = dir.get()
    dir = db.reference(f"{ctx.author.id}/경험치")
    exp = int(dir.get())
    dir = db.reference(f"{ctx.author.id}/칭호")
    칭호 = dir.get()
    dir = db.reference(f"{ctx.author.id}/최대경험치")
    max = dir.get()
    dir = db.reference(f"{ctx.author.id}/착용스킬/스킬1")
    skil1 = dir.get()
    dir = db.reference(f"{ctx.author.id}/착용스킬/스킬2")
    skil2 = dir.get()
    dir = db.reference(f"{ctx.author.id}/착용스킬/스킬3")
    skil3 = dir.get()
    dir = db.reference(f"{ctx.author.id}/스킬보유")
    skil = dir.get()
    dir = db.reference(f"{ctx.author.id}/채굴력")
    power = dir.get()
    dir = db.reference(f"{ctx.author.id}/스테미너")
    hP = dir.get()
    dir = db.reference(f"{ctx.author.id}/최대스테미너")
    MhP = dir.get()
    dir = db.reference(f"{ctx.author.id}/곡괭이 레벨")
    MLV = dir.get()
    dir = db.reference(f"{ctx.author.id}/강화최대돈")
    MMs = dir.get()
    dir = db.reference(f"{ctx.author.id}/D스킬")
    DS = dir.get()
  
    #임베드
    embed = discord.Embed(title= ctx.author.name + " Stats(정보)", description="", color=0xE4E4E4)
    embed.set_thumbnail(url=ctx.author.avatar_url)
    embed.add_field(name="‎", value="‎‎‎**칭호**", inline=False)
    embed.add_field(name=f"[{칭호}]", value="‎", inline=False)
    embed.add_field(name="‎‎‎Your LV", value=f"{level} LV\n{exp}/{max} exp", inline=False)
    embed.add_field(name="‎", value="‎‎‎**Your state(스탯)**", inline=False)
    embed.add_field(name="곡괭이레벨‎", value=f"{MLV} LV (강화비용 : {MMs})", inline=False)
    embed.add_field(name="채굴력‎", value=power, inline=True)
    embed.add_field(name="스테미너", value=f"{hP}/{MhP}", inline=True)
    embed.add_field(name="‎", value="‎‎‎**Activation SKILL**", inline=False)
    embed.add_field(name="SKILL1‎", value='<' + skil1 + '>', inline=False)
    embed.add_field(name="SKILL2", value='<' + skil2 + '>', inline=False)
    embed.add_field(name="SKILL3", value='<' + skil3 + '>', inline=False)
    embed.add_field(name="‎", value="‎‎‎**Possession SKILL**", inline=False)
    embed.add_field(name=skil, value="‎", inline=False)
    embed.add_field(name="‎", value="‎‎‎**Passive SKILL**", inline=False)
    embed.add_field(name=DS, value="‎", inline=False)
    
    await ctx.reply(embed=embed)
    

'''
async def information(ctx, id, name):
    dir = db.reference(f"{id}/레벨")
    level = dir.get()
    dir = db.reference(f"{id}/경험치")
    exp = dir.get()
    dir = db.reference(f"{id}/최대경험치")
    max = dir.get()
    dir = db.reference(f"{id}/스킬1")
    skil1 = dir.get()
    dir = db.reference(f"{id}/스킬2")
    skil2 = dir.get()
    dir = db.reference(f"{id}/스킬3")
    skil3 = dir.get()
    dir = db.reference(f"{id}/스킬보유")
    skil = dir.get()
    dir = db.reference(f"{id}/채굴력")
    power = dir.get()
    dir = db.reference(f"{id}/스테미너")
    hP = dir.get()
    dir = db.reference(f"{id}/최대스테미너")
    MhP = dir.get()
    dir = db.reference(f"{id}/곡괭이 레벨")
    MLV = dir.get()
    dir = db.reference(f"{id}/강화최대돈")
    MMs = dir.get()
    dir = db.reference(f"{id}/D스킬")
    DS = dir.get()

    #임베드
    embed = discord.Embed(title= name + " Stats(정보)", description="", color=0xE4E4E4)
    embed.add_field(name="‎‎‎Your LV", value=f"{level} LV\n{exp}/{max} exp", inline=False)
    embed.add_field(name="‎", value="‎‎‎**Your state(스탯)**", inline=False)
    embed.add_field(name="곡괭이레벨‎", value=f"{MLV} LV (강화비용 : {MMs})", inline=False)
    embed.add_field(name="채굴력‎", value=power, inline=True)
    embed.add_field(name="스테미너", value=f"{hP}/{MhP}", inline=True)
    embed.add_field(name="‎", value="‎‎‎**Activation SKILL**", inline=False)
    embed.add_field(name="SKILL1‎", value='<' + skil1 + '>', inline=False)
    embed.add_field(name="SKILL2", value='<' + skil2 + '>', inline=False)
    embed.add_field(name="SKILL3", value='<' + skil3 + '>', inline=False)
    embed.add_field(name="‎", value="‎‎‎**Possession SKILL**", inline=False)
    embed.add_field(name=skil, value="‎", inline=False)
    embed.add_field(name="‎", value="‎‎‎**Passive SKILL**", inline=False)
    embed.add_field(name=DS, value="‎", inline=False)
    await ctx.reply(embed=embed)
'''